@each $palette-color-prefix, $palette-color-variables in get-background-colors-palette($range-background-colors-support-extra-colors-palette, $range-background-colors-support-skip-colors-palette) {
    .#{$background-colors-class-prefix}-#{$palette-color-prefix} {
        @include range-colors(parse-map($range-background-colors-helpers-parser, $palette-color-variables));
    }
}


//Support for screens
@if variable-exists(background-colors-screens-support-generate-from-classes) and variable-exists(background-colors-screens-support-generate-to-classes) and variable-exists(background-colors-screens-support-generate-only-classes) {
    $before-screen-prefix: null;

    @each $screen-prefix, $sizes in map-reverse(get-screens-map()) {
        @media(min-width: get-screen-size($screen-prefix, min)) {
            @if $background-colors-screens-support-generate-from-classes and $range-background-colors-support-screens-support-generate-from-classes {
                @if index($background-colors-screens-support-from-classes-skip-screens, $screen-prefix) == null and index($range-background-colors-support-screens-support-from-classes-skip-screens, $screen-prefix) == null {
                    @each $palette-color-prefix, $palette-color-variables in get-background-colors-palette(map-merge($background-colors-screens-support-from-extra-colors-palette, $range-background-colors-support-screens-support-from-extra-colors-palette), join($background-colors-screens-support-from-skip-colors-palette, $range-background-colors-support-screens-support-from-skip-colors-palette)) {
                        .#{$screen-prefix}-#{$background-colors-class-prefix}-#{$palette-color-prefix} {
                            @include range-colors(parse-map($range-background-colors-helpers-parser, $palette-color-variables));
                        }
                    }
                }
            }

            @if not $before-screen-prefix {
                @if $background-colors-screens-support-generate-only-classes and $range-background-colors-support-screens-support-generate-only-classes {
                    @if index($background-colors-screens-support-only-classes-skip-screens, $screen-prefix) == null and index($range-background-colors-support-screens-support-only-classes-skip-screens, $screen-prefix) == null {
                        @each $palette-color-prefix, $palette-color-variables in get-background-colors-palette(map-merge($background-colors-screens-support-only-extra-colors-palette, $range-background-colors-support-screens-support-only-extra-colors-palette), join($background-colors-screens-support-only-skip-colors-palette, $range-background-colors-support-screens-support-only-skip-colors-palette)) {
                            .only-#{$screen-prefix}-#{$background-colors-class-prefix}-#{$palette-color-prefix} {
                                @include range-colors(parse-map($range-background-colors-helpers-parser, $palette-color-variables));
                            }
                        }
                    }
                }
            }
        }

        @if $background-colors-screens-support-generate-to-classes and $range-background-colors-support-screens-support-generate-to-classes {
            @if index($background-colors-screens-support-to-classes-skip-screens, $screen-prefix) == null and index($range-background-colors-support-screens-support-to-classes-skip-screens, $screen-prefix) == null {
                @media(max-width: get-screen-size($screen-prefix, max)) {
                    @each $palette-color-prefix, $palette-color-variables in get-background-colors-palette(map-merge($background-colors-screens-support-to-extra-colors-palette, $range-background-colors-support-screens-support-to-extra-colors-palette), join($background-colors-screens-support-to-skip-colors-palette, $range-background-colors-support-screens-support-to-skip-colors-palette)) {
                        .to-#{$screen-prefix}-#{$background-colors-class-prefix}-#{$palette-color-prefix} {
                            @include range-colors(parse-map($range-background-colors-helpers-parser, $palette-color-variables));
                        }
                    }
                }
            }
        }

        @if $before-screen-prefix and $background-colors-screens-support-generate-only-classes and $range-background-colors-support-screens-support-generate-only-classes {
            @if index($background-colors-screens-support-only-classes-skip-screens, $screen-prefix) == null and index($range-background-colors-support-screens-support-only-classes-skip-screens, $screen-prefix) == null {
                @media(min-width: get-screen-size($screen-prefix, min)) and (max-width: get-screen-size($before-screen-prefix, max)) {
                    @each $palette-color-prefix, $palette-color-variables in get-background-colors-palette(map-merge($background-colors-screens-support-only-extra-colors-palette, $range-background-colors-support-screens-support-only-extra-colors-palette), join($background-colors-screens-support-only-skip-colors-palette, $range-background-colors-support-screens-support-only-skip-colors-palette)) {
                        .only-#{$screen-prefix}-#{$background-colors-class-prefix}-#{$palette-color-prefix} {
                            @include range-colors(parse-map($range-background-colors-helpers-parser, $palette-color-variables));
                        }
                    }
                }
            }
        }

        $before-screen-prefix: $screen-prefix;
    }
}